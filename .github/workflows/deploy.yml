name: Deploy Dev

on:
  push:
    branches:
      - master
env:
  AWS_PROFILE: default
  ENV: dev
  ENV_NAME: dev
jobs:
  deploy:
    runs-on: ubuntu-20.04
    environment:
      name: dev
    env:
      AWS_ACCESS_KEY_ID: ${{vars.AWS_ACCESS_KEY_ID}}
      WEBAPP_BUCKET: zets-github-stars-dev
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.18.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd backend
          npm install

      - name: Prepare AWS credentials
        run: |
          mkdir ~/.aws
          echo -e "[${AWS_PROFILE}]\naws_access_key_id=${AWS_ACCESS_KEY_ID}\naws_secret_access_key=${AWS_SECRET_ACCESS_KEY}\n" > ~/.aws/credentials
          cat ~/.aws/credentials

      - name: Deploy ${ENV_NAME} environment
        run: |
          echo ENV_NAME=${ENV_NAME}
          cd backend
          npm run sls:deploy
      - name: Check if S3 Bucket Exists
        id: check-bucket
        run: |
          if aws s3 ls "s3://$WEBAPP_BUCKET}" 2>&1 | grep -q 'NoSuchBucket'; then
            echo "::set-output name=exists::false"
          else
            echo "::set-output name=exists::true"
          fi

      - name: Create S3 Bucket
        if: steps.check-bucket.outputs.exists == 'false'
        run: |
          aws s3 mb s3://${WEBAPP_BUCKET}
          aws s3 website s3://${WEBAPP_BUCKET} --index-document index.html --error-document error.html

      - name: Set Public Read Policy on S3 Bucket
        if: steps.check-bucket.outputs.exists == 'false'
        run: |
          aws s3api put-bucket-policy --bucket your-s3-bucket-name --policy '{
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Sid": "PublicReadGetObject",
                      "Effect": "Allow",
                      "Principal": "*",
                      "Action": "s3:GetObject",
                      "Resource": "arn:aws:s3:::${WEBAPP_BUCKET}/*"
                  }
              ]
          }'
      - name: Upload React App to S3
        run: |
          aws s3 sync frontend/build s3://${WEBAPP_BUCKET} --delete