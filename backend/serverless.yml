service: zets
frameworkVersion: "3.28.1"

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function

package:
  excludeDevDependencies: true
  exclude:
    - __tests__/**
    - __tests__/**/*
    - .git/**
    - .webpackCache/**
    - package-lock.json
    - pnpm-lock.yaml
    - package.json
provider:
  tags:
    env: ${sls:stage}
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  versionFunctions: false
  stackName: ${self:custom.base}-stack
  timeout: 15
  environment:
    STAGE: ${sls:stage}
    BASE_NAME: ${self:custom.base}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    USER_REPO_TABLE:
      Ref: GithubReposTable

##############################

# CUSTOM
custom:
  region: ${opt:region, self:provider.region}
  base: ${self:service}-${sls:stage}
  apiGatewayCaching:
    enabled: true
    ttlInSeconds: 3600
  accountId: #{AWS::AccountId}
  webpack:
    excludeFiles: "__tests__/**/*.test.js"
    webpackConfig: "webpack.config.js"
    packager: "npm"
    includeModules: true
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - app_user_id
    - app_user_name

functions:
  getMostStaredRepos:
    handler: src/functions/github/get-stared-repos.handler
    events:
      - http:
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
          path: github/repos
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                page: false
                pageSize: false
            schema:
              application/json:
                type: object
                properties:
                  query:
                    type: object
                    properties:
                      page:
                        type: integer
                        format: int32
                      pageSize:
                        type: integer
                        format: int32
    iamRoleStatements:
      - Effect: Allow
        Action: ssm:GetParameter
        Resource: arn:aws:ssm:${self:custom.region}:${aws:accountId}:parameter/zets-github-token
  saveRepos:
    handler: src/functions/user-repos/save-repos.handler
    events:
      - http:
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
          path: github/repos
          method: post
          cors: true
          request:
            schema:
              application/json:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    stars:
                      type: integer
                      format: int32
                    id:
                      type: integer
                      format: int32
                  required:
                    - name
                    - stars
                    - id
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:*
        Resource: !GetAtt GithubReposTable.Arn
  getRepos:
    handler: src/functions/user-repos/get-repos.handler
    events:
      - http:
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
          path: user/repos
          method: get
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:*
        Resource: !GetAtt GithubReposTable.Arn
  deleteRepos:
    handler: src/functions/user-repos/delete-repos.handler
    events:
      - http:
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
          path: user/repos
          method: delete
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:*
        Resource: !GetAtt GithubReposTable.Arn
resources:
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - Outputs:
      CognitoWebClientId:
        Value: !Ref CognitoUserPoolClientWeb
      CognitoUserPoolId:
        Value: !Ref CognitoUserPool